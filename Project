import tkinter as tk
from tkinter import messagebox
import json
import os

# File to store tasks
TASK_FILE = 'tasks.json'

def load_tasks():
    if os.path.exists(TASK_FILE):
        with open(TASK_FILE, 'r') as file:
            return json.load(file)
    return []

def save_tasks(tasks):
    with open(TASK_FILE, 'w') as file:
        json.dump(tasks, file, indent=4)

def add_task():
    description = task_entry.get()
    if description:
        tasks = load_tasks()
        task = {'description': description, 'completed': False}
        tasks.append(task)
        save_tasks(tasks)
        update_task_list()
        task_entry.delete(0, tk.END)
    else:
        messagebox.showwarning("Warning", "Task description cannot be empty!")

def update_task_list():
    task_listbox.delete(0, tk.END)
    tasks = load_tasks()
    for task in tasks:
        status = "✔" if task['completed'] else "❌"
        task_listbox.insert(tk.END, f"{task['description']} [{status}]")

def complete_task():
    selected_task_index = task_listbox.curselection()
    if selected_task_index:
        tasks = load_tasks()
        task_index = selected_task_index[0]
        tasks[task_index]['completed'] = True
        save_tasks(tasks)
        update_task_list()

def delete_task():
    selected_task_index = task_listbox.curselection()
    if selected_task_index:
        tasks = load_tasks()
        task_index = selected_task_index[0]
        tasks.pop(task_index)
        save_tasks(tasks)
        update_task_list()

# Setup GUI
root = tk.Tk()
root.title("To-Do List")

task_entry = tk.Entry(root, width=50)
task_entry.pack(pady=10)

add_button = tk.Button(root, text="Add Task", command=add_task)
add_button.pack(pady=5)

task_listbox = tk.Listbox(root, width=50, height=10)
task_listbox.pack(pady=10)

complete_button = tk.Button(root, text="Complete Task", command=complete_task)
complete_button.pack(pady=5)

delete_button = tk.Button(root, text="Delete Task", command=delete_task)
delete_button.pack(pady=5)

update_task_list()

root.mainloop()
